/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _RPC_H_RPCGEN
#define _RPC_H_RPCGEN

#include <rpc/rpc.h>

#include <pthread.h>

#ifdef __cplusplus
extern "C" {
#endif


struct user {
	char *name;
	char *ip;
	char *port;
};
typedef struct user user;

typedef struct {
	u_int user_len;
	luser *user_val;
} user;

struct ruser {
	int err;
	luser l;
};

typedef struct ruser ruser;

struct content {
	char *fileName;
};

typedef struct content content;

typedef struct {
	u_int content_len;
	lcontent *content_val;
} content;

struct rcontent {
	int err;
	lcontent l;
};

typedef struct rcontent rcontent;

struct publish_1_argument {
	char *user_name;
	char *file_name;
	char *file_description;
};
typedef struct publish_1_argument publish_1_argument;

struct my_delete_1_argument {
	char *user_name;
	char *file_name;
};
typedef struct my_delete_1_argument my_delete_1_argument;

struct my_connect_1_argument {
	char *user_name;
	char *clientip;
	char *client_port;
};
typedef struct my_connect_1_argument my_connect_1_argument;

#define PROG 99
#define PROGVER 1

#if defined(__STDC__) || defined(__cplusplus)
#define init_database 1
extern  enum clnt_stat init_database_1(void *, CLIENT *);
extern  bool_t init_database_1_svc(void *, struct svc_req *);
#define my_register 2
extern  enum clnt_stat my_register_1(char *, char *, CLIENT *);
extern  bool_t my_register_1_svc(char *, char *, struct svc_req *);
#define unregister 3
extern  enum clnt_stat unregister_1(char *, char *, CLIENT *);
extern  bool_t unregister_1_svc(char *, char *, struct svc_req *);
#define publish 4
extern  enum clnt_stat publish_1(char *, char *, char *, char *, CLIENT *);
extern  bool_t publish_1_svc(char *, char *, char *, char *, struct svc_req *);
#define my_delete 5
extern  enum clnt_stat my_delete_1(char *, char *, char *, CLIENT *);
extern  bool_t my_delete_1_svc(char *, char *, char *, struct svc_req *);
#define my_connect 6
extern  enum clnt_stat my_connect_1(char *, char *, char *, char *, CLIENT *);
extern  bool_t my_connect_1_svc(char *, char *, char *, char *, struct svc_req *);
#define disconnect 7
extern  enum clnt_stat disconnect_1(char *, char *, CLIENT *);
extern  bool_t disconnect_1_svc(char *, char *, struct svc_req *);
#define list_users 8
extern  enum clnt_stat list_users_1(char *, ruser *, CLIENT *);
extern  bool_t list_users_1_svc(char *, ruser *, struct svc_req *);
#define list_content 9
extern  enum clnt_stat list_content_1(char *, rcontent *, CLIENT *);
extern  bool_t list_content_1_svc(char *, rcontent *, struct svc_req *);
extern int prog_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define init_database 1
extern  enum clnt_stat init_database_1();
extern  bool_t init_database_1_svc();
#define my_register 2
extern  enum clnt_stat my_register_1();
extern  bool_t my_register_1_svc();
#define unregister 3
extern  enum clnt_stat unregister_1();
extern  bool_t unregister_1_svc();
#define publish 4
extern  enum clnt_stat publish_1();
extern  bool_t publish_1_svc();
#define my_delete 5
extern  enum clnt_stat my_delete_1();
extern  bool_t my_delete_1_svc();
#define my_connect 6
extern  enum clnt_stat my_connect_1();
extern  bool_t my_connect_1_svc();
#define disconnect 7
extern  enum clnt_stat disconnect_1();
extern  bool_t disconnect_1_svc();
#define list_users 8
extern  enum clnt_stat list_users_1();
extern  bool_t list_users_1_svc();
#define list_content 9
extern  enum clnt_stat list_content_1();
extern  bool_t list_content_1_svc();
extern int prog_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_user (XDR *, user*);
extern  bool_t xdr_user (XDR *, user*);
extern  bool_t xdr_ruser (XDR *, ruser*);
extern  bool_t xdr_content (XDR *, content*);
extern  bool_t xdr_content (XDR *, content*);
extern  bool_t xdr_rcontent (XDR *, rcontent*);
extern  bool_t xdr_publish_1_argument (XDR *, publish_1_argument*);
extern  bool_t xdr_my_delete_1_argument (XDR *, my_delete_1_argument*);
extern  bool_t xdr_my_connect_1_argument (XDR *, my_connect_1_argument*);

#else /* K&R C */
extern bool_t xdr_user ();
extern bool_t xdr_user ();
extern bool_t xdr_ruser ();
extern bool_t xdr_content ();
extern bool_t xdr_content ();
extern bool_t xdr_rcontent ();
extern bool_t xdr_publish_1_argument ();
extern bool_t xdr_my_delete_1_argument ();
extern bool_t xdr_my_connect_1_argument ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_RPC_H_RPCGEN */
